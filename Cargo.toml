[workspace]
members = [
    "crates/shared",
    "crates/core",
    "crates/infra",
    "crates/api",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["PulseArc Team"]
rust-version = "1.77"
publish = false
license = "MIT OR Apache-2.0"
description = "PulseArc workspace baseline (enterprise defaults)"

[workspace.dependencies]
# Workspace-level shared dependencies
tokio = { version = "1", features = ["full", "macros", "rt-multi-thread"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
anyhow = "1.0"
thiserror = "2.0"
chrono = { version = "0.4", features = ["serde"] }
chrono-tz = "0.10"
uuid = { version = "1.0", features = ["v7", "v4", "serde"] }
log = "0.4"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "json"] }

# Async utilities
async-trait = "0.1"
futures = "0.3"
futures-core = "0.3"
tokio-util = "0.7"

# Database
rusqlite = { version = "0.37", features = ["bundled-sqlcipher-vendored-openssl", "limits"] }
r2d2 = "0.8"
r2d2_sqlite = "0.31"

# HTTP client
reqwest = { version = "0.12", features = ["json", "rustls-tls", "blocking"] }

# PostgreSQL
tokio-postgres = { version = "0.7", features = ["with-chrono-0_4", "with-serde_json-1"] }
postgres-native-tls = "0.5"
native-tls = "0.2"

# Encryption & hashing
blake3 = "1.5"
hex = "0.4"
keyring = "3.6"
rand = "0.8"

# Image processing
image = "0.25"

# Environment & config
dotenvy = "0.15"
toml = "0.9"

# Utilities
regex = "1.10"
once_cell = "1.19"
parking_lot = "0.12"
dashmap = "6.1"

# Caching & Metrics
moka = { version = "0.12", features = ["sync", "future"] }
metrics = "0.23"
metrics-exporter-prometheus = "0.15"
tracing-appender = "0.2"

# OAuth & HTTP server
oauth2 = "5.0"
axum = "0.8"
tower = "0.5"
url = "2.5"
sha2 = "0.10"
base64 = "0.22"
urlencoding = "2.1"

# Type generation
serde_with = "3"

# Platform-specific dependencies (declare here, crates opt-in with target cfg)
objc2 = "0.5"
icrate = { version = "0.1", features = ["Foundation", "AppKit"] }
windows = { version = "0.58", features = ["Win32_Foundation", "Win32_UI_WindowsAndMessaging", "Win32_System_Threading"] }

# Internal crates
pulsearc-shared = { path = "crates/shared" }
pulsearc-core = { path = "crates/core" }
pulsearc-infra = { path = "crates/infra" }


[workspace.lints.rust]
unsafe_code = "deny"
missing_docs = "warn"
unused_must_use = "deny"
rust_2018_idioms = { level = "warn", priority = -1 }

[workspace.lints.clippy]
# Lint groups (lower priority so individual lints can override)
all = { level = "deny", priority = -1 }
pedantic = { level = "deny", priority = -1 }
nursery = { level = "deny", priority = -1 }
cargo = { level = "warn", priority = -1 }
# Error handling
unwrap_used = "deny"
expect_used = "deny"
panic = "deny"
panic_in_result_fn = "deny"
unwrap_in_result = "deny"
# Code quality
dbg_macro = "warn"
print_stdout = "warn"
print_stderr = "warn"
todo = "warn"
unimplemented = "deny"
# Complexity
cognitive_complexity = "warn"
too_many_arguments = "warn"
type_complexity = "warn"
# Performance
large_stack_arrays = "warn"
large_enum_variant = "warn"
# Style
wildcard_imports = "warn"

[profile.release]
panic = "abort"
codegen-units = 1
lto = "thin"
opt-level = 3
strip = true
overflow-checks = true
debug-assertions = false
incremental = false

[profile.dev]
panic = "unwind"
opt-level = 0
debug = 2
debug-assertions = true
overflow-checks = true
incremental = true

[profile.test]
opt-level = 0
debug = 2
debug-assertions = true
overflow-checks = true
incremental = true

[profile.bench]
codegen-units = 1
lto = "thin"
opt-level = 3
strip = true
overflow-checks = true

[profile.release-with-debug]
inherits = "release"
debug = 1
debug-assertions = true
overflow-checks = true

[profile.dev.build-override]
opt-level = 0

[profile.release.build-override]
opt-level = 0
